{"version":3,"sources":["components/AddCategorias.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorias","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGift","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGZC,mBAAS,IAHG,mBAGzCC,EAHyC,KAG7BC,EAH6B,KAuBhD,OACI,0BAAMC,SAbW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAvBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,Y,uBCVnBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,gDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCYLO,MAVf,YAAyC,EAAlBJ,GAAmB,IAAfC,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAE9B,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAKA,KC8BFO,EAhCC,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,ECFL,SAACA,GAAe,IAAD,EACbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACpBf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDV0BK,CAAc1B,GAAlCa,EAHgB,EAGrBN,KAAaa,EAHQ,EAGRA,QAErB,OACI,oCACI,4BAAKpB,GAEJoB,GAAW,uCAEZ,yBAAKJ,UAAU,aAGHH,EAAOJ,KAAK,SAACC,GAAD,OAER,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACND,UEOrBkB,EA1BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,iBAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAeA,cAAgBA,IAE/B,6BACA,4BAEI4C,EAAWpB,KAAI,SAAAT,GAAS,OACpB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,UAAWA,U,MCbnC8B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d91aa56e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategorias = ( {setCategorias} ) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue( e.target.value )\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            \r\n            setCategorias(cat => [inputValue, ...cat, ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategorias.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired,\r\n}\r\n\r\n","export const getGift = async(categoria) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=10&api_key=TyZdQInziRRxP5BlnjG7QeUrS3utIw5l`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url, // El signo de interrogacion es en cado de no traer imagen, si no trae imagne no la utiliza\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nfunction GifGridItem({ id, title, url }) {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n// import PropTypes from 'prop-types'\r\n\r\nconst GifGrid = ({categoria}) => {    \r\n    \r\n    \r\n    const { data:images, loading } = useFetchGifs( categoria );\r\n    \r\n    return (\r\n        <>\r\n            <h3>{categoria}</h3>\r\n            \r\n            {loading && <p>Cargando</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                    {\r\n                        images.map( (img) => (\r\n                        \r\n                            <GifGridItem\r\n                                key={ img.id } \r\n                                {...img}\r\n                                />\r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )    \r\n}\r\n\r\n// GifGrid.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifGrid\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGift } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => { // El \"useEfect()\" ejecuta la funcion \"getGift()\" solo cuando el componente es renderizado por primera vez\r\n        getGift(categoria)\r\n            .then( imgs => setState({\r\n                data: imgs,\r\n                loading: false\r\n            }))\r\n        \r\n    }, [categoria]);\r\n\r\n    return state;\r\n    \r\n}","import React, { useState } from 'react'\r\nimport { AddCategorias } from './components/AddCategorias';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['Call of duty']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategorias setCategorias={ setCategorias }/>\r\n\r\n            <hr/>            \r\n            <ol>\r\n            {\r\n                categorias.map(categoria => (\r\n                    <GifGrid\r\n                        key={categoria}\r\n                        categoria={categoria}\r\n                    />\r\n                ))\r\n                \r\n            }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}